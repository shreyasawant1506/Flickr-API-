/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./index.html");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./index.html":
/*!********************!*\
  !*** ./index.html ***!
  \********************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Flickr API</title>\r\n    <meta charset=\"utf-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.2.1/css/bootstrap.min.css\">\r\n    <link rel=\"stylesheet\" href=\"style.css\">\r\n    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js\"></script>\r\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.6/umd/popper.min.js\"></script>\r\n    <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.2.1/js/bootstrap.min.js\"></script>\r\n</head>\r\n<body>\r\n\r\n<script>\r\n\r\n    function showModal(src){\r\n        var modal = document.getElementById('myModal');\r\n        var img = document.getElementById('modalImage').setAttribute(\"src\", src)\r\n        modal.style.display = \"block\";\r\n    }\r\n\r\n    function closeModal(){\r\n        var modal = document.getElementById('myModal');\r\n        modal.style.display = \"none\";\r\n    }\r\n\r\n    var data = new XMLHttpRequest();\r\n    data.open('GET', \"https://api.flickr.com/services/rest/?method=flickr.galleries.getPhotos&api_key=f7560488accbe57518236daa16323492&gallery_id=72157703406532791&per_page=10&format=json&nojsoncallback=1\");\r\n    data.send(null);\r\n    data.onload = function () {\r\n        if (data.status >= 200 && data.status < 300) {\r\n            generateOutput(data.response)\r\n        } else {\r\n            console.log('The request failed!');\r\n        }\r\n    };\r\n\r\n    function generateOutput(data){\r\n        var data = JSON.parse(data);\r\n        var numOfObjects = data.photos.photo.length\r\n        for (var i = 0; i < Math.floor(numOfObjects/10); i++) {\r\n            switch(i){\r\n                case 0:\r\n                    parent = document.getElementById(\"pages\")\r\n                    child = document.createElement('li');\r\n                    child.className = \"nav-item\"\r\n                    child.innerHTML = '<a class=\"nav-link active\" data-toggle=\"pill\" href=\"#page'+i+'\">'+(i+1)+'</a>'\r\n                    parent.appendChild(child)\r\n\r\n                    parent = document.getElementById(\"tabContent\")\r\n                    child = document.createElement('div');\r\n                    child.setAttribute(\"id\", \"page\"+i);\r\n                    child.className = \"tab-pane active\"\r\n                    child.innerHTML = '<div class=\"row\" id=\"pages'+i+'\"></div>'\r\n                    parent.appendChild(child)\r\n                    break\r\n\r\n                default:\r\n\r\n                    parent = document.getElementById(\"pages\")\r\n                    child = document.createElement('li');\r\n                    child.className = \"nav-item\"\r\n                    child.innerHTML = '<a class=\"nav-link\" data-toggle=\"pill\" href=\"#page'+i+'\">'+(i+1)+'</a>'\r\n                    parent.appendChild(child)\r\n\r\n                    parent = document.getElementById(\"tabContent\")\r\n                    child = document.createElement('div');\r\n                    child.setAttribute(\"id\", \"page\"+i);\r\n                    child.className = \"tab-pane fade in\"\r\n                    child.innerHTML = '<div class=\"row\" id=\"pages'+i+'\"></div>'\r\n                    parent.appendChild(child)\r\n                    break\r\n            }\r\n        }\r\n        var count = 0\r\n        var pageCount = 0\r\n        for (var i = 0; i < numOfObjects; i++) {\r\n            var farmId = data.photos.photo[i].farm;\r\n            var serverId = data.photos.photo[i].server;\r\n            var id = data.photos.photo[i].id;\r\n            var secret = data.photos.photo[i].secret;\r\n            var src = 'https://farm' + farmId + '.staticflickr.com/' + serverId + '/' + id + '_' + secret + '.jpg'\r\n            if (count < 10) {\r\n                parent = document.getElementById('pages'+pageCount)\r\n                child = document.createElement('div');\r\n                child.className = \"col-md-3\"\r\n                child.innerHTML = '<div class=\"containerImages\" id=\"gridImage\" style = \"background-image:url('+src+')\"  onclick=showModal(\"'+src+'\")></div>'\r\n                parent.appendChild(child)\r\n                count++\r\n            }\r\n            else{\r\n                count=0\r\n                pageCount++\r\n            }\r\n        }\r\n    }\r\n\r\n</script>\r\n<h2><div id=\"galleryTitle\">Photo Gallery</div></h2>\r\n<ul class=\"nav nav-pills\" id=\"pages\">\r\n\r\n</ul>\r\n\r\n<div class=\"tab-content\" id=\"tabContent\">\r\n\r\n</div>\r\n\r\n\r\n<div id=\"myModal\" class=\"modal\">\r\n    <span class=\"close\" onclick=\"closeModal()\">&times;</span>\r\n    <img class=\"modal-content\" id=\"modalImage\">\r\n    <div id=\"caption\"></div>\r\n</div>\r\n\r\n</body>\r\n</html>\r\n";

/***/ })

/******/ });
//# sourceMappingURL=data:application/json;charset=utf-8;base64,